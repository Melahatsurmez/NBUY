@using BlogApp.Shared.Utilities.Result.ComplexTypes
@using BlogApp.Entities.Dtos
@model CategoryListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Kategoriler Anasayfa";
}
@if (Model.ResultStatus == ResultStatus.Success)
{
    @*Kategoriler Listelenecek*@
    <div id="modalPlaceHolder" aria-hidden="true"></div>
    <h1 class="mt-4">Admin Kategoriler</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
        <li class="breadcrumb-item active">Kategoriler</li>
    </ol>
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Kategoriler
        </div>
        <div class="card-body">
            <div class="spinner-border" role="status" style="display:none;">
                <span class="sr-only">Yükleniyor...</span>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="categoriesTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Ad</th>
                            <th>Açıklama</th>
                            <th>Aktif mi?</th>
                            <th>Silinmiş mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturulan Kullanıcı</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Ad</th>
                            <th>Açıklama</th>
                            <th>Aktif mi?</th>
                            <th>Silinmiş mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturulan Kullanıcı</th>
                            <th>İşlemler</th>

                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            <tr name="@category.Id">  @*hangi trli ıd yi silmek için name verdik*@
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>@category.Description</td>
                                <td>@category.IsActive</td>
                                <td>@category.IsDeleted</td>
                                <td>@category.Note</td>
                                <td>@category.CreatedDate.ToShortDateString()</td>
                                <td>@category.CreatedByName</td>
                                <td>
                                    <button class="btn btn-warning btn-sm"><span class="fas fa-edit text-white"></span></button>
                                    <button class="btn btn-danger btn-sm btn-delete" data-id="@category.Id"><span class="fas fa-minus-circle"></span></button> @*data id hangi id li category i silecegini göstermek için , tıklanılan şey btn delete mi onu kontrol etmek için btn delete verdik*@
                                </td> 
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>      
        $(document).ready(function () {
            //datatable burada başlıyor
            $('#categoriesTable').DataTable({

                dom: "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        text: 'Ekle',
                        attr: {
                            id: 'btnAdd'
                        },
                        action: function (e, dt, node, config) {

                        },
                        className: 'btn btn-success'
                    },
                    { //yenileye tıklanınca çıkan alert kısmı burası
                        text: 'Yenile',
                        action: function (e, dt, node, config) {
                            //Burada yenile butonuna basıldıgında Ajax ile içeriğimizi yenileyeceğiz.
                            $.ajax({
                                type: 'GET',//Yapacagımız işlemin get işlemi oldugunu söyleyip
                                url: '@Url.Action("GetAllCategories", "Category")',//Hangi kategorinin çalıştıgı ve neyin içinde bulundugu
                                contentType: 'application/json', // Jsonla çalışacagımızı söyledik
                                beforeSend: function () {
                                    //Get işlemi başarılıysa ondan hemen önce bu işlemi yapıcak
                                    $('#categoriesTable').fadeOut(1500); // bu tabloyu gizlemesi
                                    $('.spinner-border').show(); // spinner gösterme işlemi
                                },
                                success: function (data) { //data ismi istediğimiz isim
                                    const categoryListDto = jQuery.parseJSON(data);
                                    console.log(categoryListDto);                                 
                                    if (categoryListDto.ResultStatus === 0) { // eger categoryListDto dönen 0 sa yani successse
                                        let tableBody = ''; //yeni oluşturacagımız tablo
                                        $.each(categoryListDto.Categories.$values, 
                                            function (index, category) //neyin içinde dönüp değerlere nasıl ulaşacağı kısmı
                                        {
                                            tableBody += `
                                                    <tr name="${category.Id}">
                                                    <td>${category.Id}</td>
                                                    <td>${category.Name}</td>
                                                    <td>${category.Description}</td>
                                                    <td>${convertFirstLetterToUpperCase(category.IsActive)}</td>
                                                    <td>${convertFirstLetterToUpperCase(category.IsDeleted)}</td>
                                                    <td>${category.Note ?? ""}</td>
                                                    <td>${convertToShortDate(category.CreatedDate)}</td>
                                                    <td>${category.CreatedByName}</td>
                                                    <td>
                                                        <button class="btn btn-warning btn-sm"><span class="fas fa-edit text-white"></span></button>
                                                        <button class="btn btn-danger btn-sm btn-delete" data-id="${category.Id}"><span class="fas fa-minus-circle"></span></button> @*data id hangi id li category i silecegini göstermek için , tıklanılan şey btn delete mi onu kontrol etmek için btn delete verdik*@
                                                    </td>
                                                    </tr>
                                                `;
                                            });
                                    $('#categoriesTable > tbody').replaceWith(tableBody);
                                    $('.spinner-border').hide();
                                    $('#categoriesTable').fadeIn(1500);
                                    }else{ //eğer 0 yani success çalışmazsa ama çalışacağı bu hata mesajı şuan için görülmez 
                                        toastr.error(`${categoryListDto.Message}`, 'İşem Başarısız!');
                                    }
                                },
                                error: function (err) {
                                    console.log(err);
                                    toastr.error(err, 'Başarısız İşlem!')
                                }
                            });
                        },
                        className: 'btn btn-warning'
                    }
                ],
                language: {
                    url: 'http://cdn.datatables.net/plug-ins/1.13.1/i18n/tr.json'
                }
            }); //Bu sayfa yüklemesini tamamlandıgında bu çalışsın
            //Datataable burada bitiyor

            $(function () {
                const url = '@Url.Action("Add", "Category")';
                const placeHolderDiv = $('#modalPlaceHolder');
                //Ajax'la partial Viewımızı ekrana getirdik
                $('#btnAdd').click(function () {
                    $.get(url).done(function (data) {
                        placeHolderDiv.html(data);
                        placeHolderDiv.find(".modal").modal('show');
                    });
                });
                //Ajax'la (GET) partial Viewımızı ekrana getirme BİTTİ

                //Ajax'la POST İşlemleri
                placeHolderDiv.on('click', '#btnSave', function (event) { //click yapıldığında btnsave çalışır
                    event.preventDefault(); //submit oldugunda sayfanın refresh yapılmaması
                    const form = $('#form-category-add')// _categoryAddPartialdaki form-category-add id si
                    const actionUrl = form.attr('action');
                    const dataToSend = form.serialize(); //veritabanına göndermek istediğimizde bu kod çalışır
                    $.post(actionUrl, dataToSend).done(function (data) {
                        const categoryAddAjaxModel = jQuery.parseJSON(data); // veritabanının jsonda dönüşümü
                        const newFormBody = $('.modal-body', categoryAddAjaxModel.CategoryAddPartial);//
                        placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                        const isValid = newFormBody.find('[name="IsValid"]').val() === 'True'; //
                        if (isValid) {
                            //Id Name gibi istediğimiz bilgileri tabloya bu şekilde ekliyoruz
                            const newTableRow = `
                            < tr >
                            <td>${ categoryAddAjaxModel.CategoryDto.Category.Id } </td>
                            <td>${ categoryAddAjaxModel.CategoryDto.Category.Name } </td>
                            <td>${ categoryAddAjaxModel.CategoryDto.Category.Description } </td>
                            <td>${ convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsActive) } </td>
                            <td>${ convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsDeleted) } </td>
                            <td>${ categoryAddAjaxModel.CategoryDto.Category.Note ?? '' } </td>
                            <td>${ convertToShortDate(categoryAddAjaxModel.CategoryDto.Category.CreatedDate) } </td>
                            <td>${ categoryAddAjaxModel.CategoryDto.Category.CreatedByName } </td>
                            </tr>
                                                                                `;
                            //girdiğimiz bilgiler doğruysa aşağıdaki kodlar çalışacak ve bilgilerin aşağıdaki kodda verildiği gibi istenilen sürede ekrana yavaş bir şekilde gelmesini sağlayacak ve sağ üst köşede işlemin başarıyla oluştuğu gösterilecek kısım kodu
                            const newTableRowObject = $(newTableRow);
                            newTableRowObject.hide();
                            $('#categoriesTable').append(newTableRowObject);
                            newTableRowObject.fadeIn(3000);
                            toastr.success(`${ categoryAddAjaxModel.CategoryDto.Message } `, 'Başarılı!');
                            placeHolderDiv.find(".modal").modal('hide');
                        } else {
                            //Eğer istenilen koşullara uygun değilse de (karakter sayısı vb. gibi) yine sağ üst keşede hangi koşula uymadıgı yazılacak kod kısmı
                            let summaryText = '<br>';
                            $('#validation-summary > ul > li').each(function () {
                                let liText = $(this).text();
                                summaryText += `* ${ liText } <br><br>`;
                            });
                            console.log(summaryText); //Sayfanın sağ üst köşesinde gösterilen etiketi yazdırıyoruz.
                            toastr.warning(summaryText, 'Dikkat'); //tastr ın bize sağlamış oldugu warning kodu ile başlık gbi bir yazı ekliyoruz.
                        }
                    });
                });
                //Ajax'la POST İşlemleri Bitti

                //Ajax'la DELETE İşlemleri
                $(document).on('click', '.btn-delete', function(event){ //document sayfanın kendisi click yapıldığında  (classı btn delete olan) bu functionu çalıştır (
                    event.preventDefault(); //burada buttonumuzuntipi submit olmadıgı için bunu kullanmasak da olur.Alışkanlık olması için yzdık
                    const id= $(this).attr('data-id'); //this demek neye tıklanıldıysa o demek, attr ulaşmak istiyoruz(data id olan)
                    Swal.fire({
                        title: 'Silmek istediğinizden emin misiniz?',
                        text: "İlgili kategori silinecektir!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet',
                        cancelButtonText: 'Hayır'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            //Burada kategorinin silinme işlemleri yapılacak artından silinmiştir mesajı gösterilecektir.
                            $.ajax({
                                type:'POST', 
                                dataType:'json', // jsondan göndericez ,veri çekerken application json veri update ederken bu şekşlde yapzılır.
                                data: {categoryId:id }, // 2 sonra bunu alacak , değeri id olan
                                url: '@Url.Action("Delete", "Category")', //1 ilk buraya gidicek
                                success: function(data){
                                    const result=jQuery.parseJSON(data); //gelen datayı sonucun içinde atın jsonda parse
                                    if(result.ResultStatus===0) //geriye dönen result değeri varsa ve 0 sa burası çalışacak
                                    {
                                        Swal.fire({
                                            title: 'İşlem başarılı!',
                                            text: 'İlgili kategori silinmiştir.',
                                            icon: 'success',
                                            confirmButtonText: 'Tamam'
                                        }); //silinme işlemi yazısı çıktıktan sonra aşagıda silme işlemi kısmı yapılacak
                                        const tableRow=$(`[name="${id}"]`);
                                        tableRow.fadeOut(3000);
                                    }else{
                                        Swal.fire({
                                            title: 'Hata Oluştu!',
                                            text: `${result.Message}`,
                                            icon: 'error',
                                            confirmButtonText: 'Tamam'
                                        });
                                    }
                                },
                                error: function(err){
                                    toastr.error(err.statusText, 'Hata!')
                                }
                            })                                                   
                        }
                    })
                
                });
            });
        });
    </script>
}